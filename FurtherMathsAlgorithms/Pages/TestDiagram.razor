@page "/diagrams"

@using Blazor.Diagrams.Core
@using Blazor.Diagrams.Core.Geometry
@using Blazor.Diagrams.Core.Models

<!-- required to resolve DiagramCanvas component -->
@using Blazor.Diagrams.Components

<h1>Z Blazor Diagrams</h1>

<p>This component demonstrates a diagram.</p>

<!--
Parent of DiagramCanvas has to have a fixed width/height
or it will not be rendered.

100vw = 100% viewport width
100vh = 100% viewport height
-->
<div style="width:100%; height: 90vh">
  <CascadingValue Value="Diagram">
    <DiagramCanvas></DiagramCanvas>
  </CascadingValue>
</div>
<btn @onclick="AddNode">Cheese</btn>

@code {
    private Diagram Diagram { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var options = new DiagramOptions
        {
            DeleteKey = "Delete", // What key deletes the selected nodes/links
            DefaultNodeComponent = null, // Default component for nodes
            AllowMultiSelection = false, // Whether to allow multi selection using CTRL
            Links = new DiagramLinkOptions
            {
            },
            Zoom = new DiagramZoomOptions
            {
                Enabled = false
            }
        };
        Diagram = new Diagram(options);

        Setup();
    }

    private void AddNode()
    {
        Diagram.Nodes.Add(NewNode(400, 50,"node1"));
    }

    private void Setup()
    {
        var node1 = NewNode(50, 50,"node1");
        var node2 = NewNode(300, 300,"node2");
        var node3 = NewNode(300, 50,"node3");
        Diagram.Nodes.Add(new [] { node1, node2, node3 });

        //Diagram.Links.Add(new LinkModel(node1.GetPort(PortAlignment.Right), node2.GetPort(PortAlignment.Left)));
        Diagram.Links.Add(new LinkModel(node1, node3));
    }

    private static NodeModel NewNode(double x, double y,string title)
    {
        var node = new NodeModel(new Point(x, y));
        node.AddPort(PortAlignment.Top);
        node.AddPort(PortAlignment.Right);
        node.AddPort(PortAlignment.Left);
        node.AddPort(PortAlignment.Bottom);
        node.Title = title;
        return node;
  }

}
@*<table>
    <thead>
        <tr>Node Name</tr>
    </thead>
    <tbody>
        @foreach()
        <tr></tr>
    </tbody>
</table>*@
